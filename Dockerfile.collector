# Stage 1: Build the Rust collector
FROM rust:1.86-slim-bookworm AS builder

# Install required dependencies for eBPF and development
RUN apt-get update && apt-get install -y \
    clang-19 \
    libelf-dev \
    make \
    pkg-config \
    && ln -s /usr/bin/clang-19 /usr/bin/clang \
    && rustup component add rustfmt \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Copy only the files needed for dependency resolution first
COPY Cargo.toml ./
COPY crates/collector/Cargo.toml ./crates/collector/
COPY crates/perf_events/Cargo.toml ./crates/perf_events/
COPY crates/timeslot/Cargo.toml ./crates/timeslot/
COPY crates/bpf/Cargo.toml ./crates/bpf/
COPY crates/nri/Cargo.toml ./crates/nri/
COPY crates/trace-analysis/Cargo.toml ./crates/trace-analysis/
COPY crates/nri-init/Cargo.toml ./crates/nri/
# Create dummy source files to build dependencies
RUN mkdir -p crates/collector/src \
    crates/perf_events/src \
    crates/timeslot/src \
    crates/bpf/src \
    crates/nri/src \
    crates/trace-analysis/src \
    crates/nri-init/src \
    && touch crates/collector/src/lib.rs \
    && touch crates/perf_events/src/lib.rs \
    && touch crates/timeslot/src/lib.rs \
    && touch crates/bpf/src/lib.rs \
    && touch crates/nri/src/lib.rs \
    && touch crates/trace-analysis/src/lib.rs \
    && touch crates/nri-init/src/lib.rs \
    && echo "fn main() { println!(\"Hello, world!\"); }" > crates/collector/src/main.rs

# Build dependencies only (this will be cached)
RUN cargo build --release --bin collector

# Now copy the actual source code
COPY crates ./crates/

# Ensure source files are recompiled
RUN     touch crates/collector/src/lib.rs \
    && touch crates/perf_events/src/lib.rs \
    && touch crates/timeslot/src/lib.rs \
    && touch crates/bpf/src/lib.rs \
    && touch crates/nri/src/lib.rs \
    && touch crates/trace-analysis/src/lib.rs \
    && touch crates/nri-init/src/lib.rs \
    && touch crates/collector/src/main.rs

# Build the actual application
RUN cargo build --release --bin collector

# Stage 2: Create a lightweight runtime image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libelf1 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && addgroup --system collector \
    && adduser --system --ingroup collector collector

# Copy the built binary
COPY --from=builder /app/target/release/collector /usr/local/bin/

USER collector:collector
ENTRYPOINT ["/usr/local/bin/collector"] 