name: test-nri-integration
on: 
  workflow_dispatch:  # Manual trigger for testing
  pull_request:
    paths:
      - 'Cargo.toml'
      - 'crates/nri/**'
      - '.github/actions/setup-k3s/**'
      - '.github/workflows/test-nri-integration.yaml'
  push:
    branches:
      - main
    paths:
      - 'Cargo.toml'
      - 'crates/nri/**'
      - '.github/actions/setup-k3s/**'
      - '.github/workflows/test-nri-integration.yaml'

permissions:
  contents: read

jobs:
  test-nri-integration:
    name: Test NRI Integration
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup k3s
        uses: ./.github/actions/setup-k3s
        with:
          kubeconfig_path: /etc/rancher/k3s/k3s.yaml
          disable_packaged_addons: true
          preflight_inotify: true
          wait_kube_system: false
          timeout_api_server_ready_seconds: 300
          timeout_node_ready_seconds: 300

      - name: Copy kubeconfig for non-root use
        run: |
          mkdir -p ~/.kube
          sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
          sudo chown $(id -u):$(id -g) ~/.kube/config

      - name: Install Rust
        run: |
          echo "=== Installing Rust toolchain ==="
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          
          echo "=== Rust version info ==="
          rustc --version
          cargo --version
          

      - name: Capture rustc version
        id: rustc_version
        run: |
          source ~/.cargo/env
          echo "version=$(rustc -V | awk '{print $2}')" >> "$GITHUB_OUTPUT"

      - name: Cache Cargo registry, git, and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rustc_version.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rustc_version.outputs.version }}-
            ${{ runner.os }}-cargo-

      - name: Install build dependencies (APT)
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: clang libelf-dev build-essential pkg-config
          version: 1.0

      - name: Build NRI integration test
        run: |
          source ~/.cargo/env
          
          echo "=== Building NRI integration test ==="
          cargo test --package nri --test integration_test --no-run --verbose
          
          # Find the test binary
          TEST_BIN=$(find target/debug/deps -name "integration_test-*" -type f -executable | head -1)
          
          if [ -z "$TEST_BIN" ]; then
            echo "Error: Could not find integration test binary."
            find target -name "*integration_test*" -type f
            exit 1
          fi
          
          echo "Found test binary at: $TEST_BIN"
          echo "TEST_BINARY_PATH=$TEST_BIN" >> $GITHUB_ENV

      - name: Verify NRI socket
        run: |
          set -euo pipefail
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          echo "=== Waiting for NRI socket at /var/run/nri/nri.sock ==="
          for i in $(seq 1 90); do
            if sudo test -S /var/run/nri/nri.sock; then
              echo "✓ NRI socket present"
              sudo ls -la /var/run/nri/nri.sock
              break
            fi
            sleep 1
          done
          if ! sudo test -S /var/run/nri/nri.sock; then
            echo "✗ NRI socket not found after enabling on k3s"
            sudo journalctl -u k3s --no-pager -n 200 || true
            exit 1
          fi

      - name: Run NRI Integration Test (host)
        run: |
          source ~/.cargo/env
          export RUST_LOG=debug
          export NRI_SOCKET_PATH=/var/run/nri/nri.sock
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          
          echo "=== Running NRI Integration Test on host ==="
          echo "Test binary: $TEST_BINARY_PATH"
          echo "KUBECONFIG: $KUBECONFIG"
          echo "Socket path: $NRI_SOCKET_PATH"
          kubectl get nodes
          kubectl get pods -A
          if sudo test -S "$NRI_SOCKET_PATH"; then
            echo "✅ NRI socket exists - running test"
            sudo -E "$TEST_BINARY_PATH" --ignored --nocapture --test-threads=1 || {
              echo "=== Test failed; showing k3s logs ==="
              sudo journalctl -u k3s --no-pager -n 200 || true
              exit 1
            }
          else
            echo "❌ NRI socket missing at $NRI_SOCKET_PATH"
            exit 1
          fi
          echo "=== Verifying test pods cleanup ==="
          kubectl get pods --all-namespaces | grep -E "(nri-test|nri-pre-existing|nri-cgroup-path-test)" || echo "No leftover test pods"
          echo "=== NRI Integration Test Complete ==="

      - name: Cleanup
        if: always()
        run: |
          echo "=== Uninstalling k3s ==="
          sudo /usr/local/bin/k3s-uninstall.sh || true
