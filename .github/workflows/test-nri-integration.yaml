name: test-nri-integration
on: 
  workflow_dispatch:  # Manual trigger for testing
  push:
    branches:
      - main
    paths:
      - 'crates/nri/**'
      - '.github/workflows/test-nri-integration.yaml'

permissions:
  contents: read

jobs:
  test-nri-integration:
    name: Test NRI Integration
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker
        run: |
          # Ensure Docker is running (should already be on ubuntu-latest)
          sudo systemctl start docker
          sudo systemctl enable docker
          docker --version
          
          # Add current user to docker group to avoid sudo
          sudo usermod -aG docker $USER
          # Note: In GitHub Actions, this change takes effect in subsequent steps

      - name: Install KIND and kubectl
        run: |
          # Install KIND
          [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version
          
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Create KIND cluster with NRI support
        run: |
          # Create KIND cluster config with NRI support
          cat > kind-config.yaml << 'EOF'
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          name: nri-test
          nodes:
          - role: control-plane
            extraMounts:
            - hostPath: /tmp/nri
              containerPath: /var/run/nri
            - hostPath: /tmp/nri-conf
              containerPath: /etc/nri/conf.d
            - hostPath: /tmp/nri-plugins
              containerPath: /opt/nri/plugins
          containerdConfigPatches:
          - |-
            [plugins."io.containerd.nri.v1.nri"]
              disable = false
              disable_connections = false
              socket_path = "/var/run/nri/nri.sock"
              plugin_config_path = "/etc/nri/conf.d"
              plugin_path = "/opt/nri/plugins"
          EOF
          
          # Create directories for NRI on host that will be mounted
          sudo mkdir -p /tmp/nri /tmp/nri-conf /tmp/nri-plugins
          sudo chmod 777 /tmp/nri /tmp/nri-conf /tmp/nri-plugins
          
          echo "=== Creating KIND cluster with NRI support ==="
          kind create cluster --config kind-config.yaml --wait 300s
          
          echo "=== Cluster created, checking status ==="
          kubectl cluster-info --context kind-nri-test
          kubectl get nodes
          kubectl get pods -A

      - name: Verify NRI setup
        run: |
          echo "=== Verifying NRI socket and configuration ==="
          
          # Check if NRI socket exists in the mounted directory
          for i in {1..30}; do
            if [ -S "/tmp/nri/nri.sock" ]; then
              echo "✅ NRI socket found at /tmp/nri/nri.sock"
              ls -la /tmp/nri/nri.sock
              break
            else
              echo "Waiting for NRI socket... (attempt $i/30)"
              sleep 2
            fi
          done
          
          if [ ! -S "/tmp/nri/nri.sock" ]; then
            echo "❌ NRI socket not found after waiting"
            echo "Checking KIND container logs..."
            docker logs nri-test-control-plane 2>&1 | grep -i nri || echo "No NRI logs found"
            
            echo "Checking containerd config in KIND container..."
            docker exec nri-test-control-plane cat /etc/containerd/config.toml
            
            echo "Checking if containerd is running with NRI..."
            docker exec nri-test-control-plane ps aux | grep containerd
            
            echo "⚠️  Continuing without NRI socket - this may indicate configuration issues"
          fi
          
          echo "=== Verifying cluster readiness ==="
          kubectl wait --for=condition=Ready nodes --all --timeout=300s
          kubectl wait --namespace kube-system --for=condition=Ready pods --all --timeout=300s
          
          echo "=== Final cluster status ==="
          kubectl get nodes -o wide
          kubectl get pods -A

      - name: Install Rust and build tools
        run: |
          echo "=== Installing Rust toolchain ==="
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          
          echo "=== Installing build dependencies ==="
          sudo apt-get update
          sudo apt-get install -y clang libelf-dev build-essential pkg-config
          
          echo "=== Rust version info ==="
          rustc --version
          cargo --version

      - name: Build NRI integration test
        run: |
          source ~/.cargo/env
          
          echo "=== Building NRI integration test ==="
          cargo test --package nri --test integration_test --no-run --verbose
          
          # Find the test binary
          TEST_BIN=$(find target/debug/deps -name "integration_test-*" -type f -executable | head -1)
          
          if [ -z "$TEST_BIN" ]; then
            echo "Error: Could not find integration test binary."
            find target -name "*integration_test*" -type f
            exit 1
          fi
          
          echo "Found test binary at: $TEST_BIN"
          echo "TEST_BINARY_PATH=$TEST_BIN" >> $GITHUB_ENV

      - name: Run NRI Integration Test
        run: |
          source ~/.cargo/env
          
          echo "=== Running NRI Integration Test ==="
          export KUBECONFIG="$(kind get kubeconfig-path --name nri-test)"
          export NRI_SOCKET_PATH=/tmp/nri/nri.sock
          export RUST_LOG=debug
          
          echo "Test binary: $TEST_BINARY_PATH"
          echo "Socket path: $NRI_SOCKET_PATH"
          echo "Kubernetes config: $KUBECONFIG"
          
          echo "=== Pre-test environment check ==="
          echo "User: $(whoami)"
          kubectl get nodes
          kubectl get pods -A
          
          if [ -S "$NRI_SOCKET_PATH" ]; then
            echo "✅ NRI socket exists - proceeding with NRI integration test"
            
            # Run the integration test
            sudo $TEST_BINARY_PATH --ignored --nocapture || {
              echo "=== Test failed, checking logs ==="
              echo "KIND container logs:"
              docker logs nri-test-control-plane 2>&1 | tail -100
              echo "=== End of logs ==="
              exit 1
            }
          else
            echo "❌ NRI socket missing - cannot run NRI integration test"
            echo "This indicates that NRI is not properly configured in KIND"
            echo "Checking system state:"
            echo "- KIND container status:"
            docker ps | grep nri-test
            echo "- KIND logs:"
            docker logs nri-test-control-plane 2>&1 | tail -50
            echo "- NRI directory contents:"
            ls -la /tmp/nri/ || echo "NRI directory not found"
            echo "- Containerd config in KIND:"
            docker exec nri-test-control-plane cat /etc/containerd/config.toml
            
            echo "=== Skipping NRI integration test due to missing NRI socket ==="
            exit 1
          fi
          
          echo "=== Verifying test pods cleanup ==="
          kubectl get pods --all-namespaces | grep -E "(nri-test|nri-pre-existing)" || echo "No test pods found (good - they were cleaned up)"
          
          echo "=== NRI Integration Test Complete ==="

      - name: Cleanup
        if: always()
        run: |
          echo "=== Cleaning up KIND cluster ==="
          kind delete cluster --name nri-test || true
          
          echo "=== Cleaning up NRI directories ==="
          sudo rm -rf /tmp/nri /tmp/nri-conf /tmp/nri-plugins || true