name: build-collector
run-name: Build collector by @${{ github.actor }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Dockerfile.collector'
      - 'Dockerfile.nri-init'
      - '.github/workflows/build-collector.yaml'

permissions:
  contents: read
  packages: write

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      short-sha: ${{ steps.get-sha.outputs.SHORT_SHA }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get short SHA
        id: get-sha
        run: |
          SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "Short SHA: $SHORT_SHA"

  build-images:
    name: Build per-arch images via reusable workflow
    needs: context
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            arch: amd64
            component: collector
          - runner: ubuntu-24.04-arm
            arch: arm64
            component: collector
          - runner: ubuntu-latest
            arch: amd64
            component: nri-init
          - runner: ubuntu-24.04-arm
            arch: arm64
            component: nri-init
    uses: ./.github/workflows/build-component-artifacts.yaml
    permissions:
      contents: read
      packages: write
    with:
      runner: ${{ matrix.runner }}
      component: ${{ matrix.component }}
      push: ${{ github.event_name != 'pull_request' }}
      image-repository: ghcr.io/${{ github.repository }}/${{ matrix.component }}
      image-tag: ${{ matrix.arch }}-${{ needs.context.outputs.short-sha }}
      upload-image-artifact: false
      upload-binary-artifact: false

  manifest:
    needs: [context, build-images]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        component: [collector, nri-init]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create and push multi-arch manifest using buildx imagetools
        shell: bash
        run: |
          set -euo pipefail
          SHORT_SHA="${{ needs.context.outputs.short-sha }}"
          IMAGE_NAME="${{ matrix.component }}"
          MAIN_TAG="ghcr.io/${{ github.repository }}/${IMAGE_NAME}:main-${SHORT_SHA}"
          AMD64_TAG="ghcr.io/${{ github.repository }}/${IMAGE_NAME}:amd64-${SHORT_SHA}"
          ARM64_TAG="ghcr.io/${{ github.repository }}/${IMAGE_NAME}:arm64-${SHORT_SHA}"
          echo "Creating multi-arch manifest for $MAIN_TAG"
          docker buildx imagetools create --tag "${MAIN_TAG}" \
            "${AMD64_TAG}" \
            "${ARM64_TAG}"
          echo "Successfully created multi-arch manifest: ${MAIN_TAG}"
          echo "Verifying multi-arch manifest:"
          docker buildx imagetools inspect "${MAIN_TAG}"
