name: Get Resctrl and Perf info
on: 
  workflow_dispatch:  # Manual trigger for testing
    inputs:
      machine-type:
        description: 'EC2 instance type to use'
        required: false
        default: 'm7i.metal-24xl'
        type: string

# Add permissions needed for OIDC authentication
permissions:
  id-token: write # Required for requesting the JWT

jobs:
  setup-runner:
    name: Start EC2 runner
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.start-runner.outputs.runner-label }}
      ec2-instance-id: ${{ steps.start-runner.outputs.ec2-instance-id }}
      region: ${{ steps.start-runner.outputs.region }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Start AWS Runner
        id: start-runner
        uses: ./.github/actions/aws-runner
        with:
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          instance-type: ${{ inputs.machine-type }}
          image-type: 'ubuntu-24.04'
          pre-runner-script: |
            sudo yum update -y && \
            sudo yum install docker git libicu -y
            sudo systemctl enable docker

  do-job:
    needs: setup-runner
    runs-on: ${{ needs.setup-runner.outputs.runner-label }}
    steps:
      - name: List perf counters
        run: |
          perf list
      - name: List perf - detailed
        run: |
          perf list --long-desc --details || true
      - name: Check perf paranoid
        run: |
          ls /proc/sys/kernel/perf_event_paranoid
          cat /proc/sys/kernel/perf_event_paranoid
      - name: Check RDT Capabilities
        run: |
          sudo mkdir -p /sys/fs/resctrl
          sudo mount -t resctrl resctrl /sys/fs/resctrl || true
          
          echo "Mounting resctrl filesystem"
          mount | grep resctrl || true
          
          echo "Checking RDT capabilities"
          ls /sys/fs/resctrl/info || true
          
          echo "Monitoring features:"
          cat /sys/fs/resctrl/info/L3_MON/mon_features || true
          
          echo "Number of available RMIDs:"
          cat /sys/fs/resctrl/info/L3_MON/num_rmids || true

          echo "Number of CAT classes:"
          cat /sys/fs/resctrl/info/L3/num_closids || true
          
          echo "CPU RDT features:"
          grep -E "cat_l3|cdp_l3|cqm_occup_llc|cqm_mbm_total|cqm_mbm_local" /proc/cpuinfo || true
          
          # we do not unmount, maybe mounting affects the intel_cqm checks below
          #sudo umount /sys/fs/resctrl || true
      - name: List all resctrl files
        run: |
          echo "=== Complete resctrl filesystem listing ==="
          find /sys/fs/resctrl -type f 2>/dev/null | sort || true
          
          echo ""
          echo "=== Directory structure ==="
          find /sys/fs/resctrl -type d 2>/dev/null | sort || true
          
          echo ""
          echo "=== Counting domains ==="
          echo "L3 domains:"
          ls -d /sys/fs/resctrl/info/L3/*/cpus 2>/dev/null | wc -l || echo "L3 not available"
          
          echo "L3_MON domains:"
          ls -d /sys/fs/resctrl/info/L3_MON/*/cpus 2>/dev/null | wc -l || echo "L3_MON not available"
          
          echo "L2 domains (if present):"
          ls -d /sys/fs/resctrl/info/L2/*/cpus 2>/dev/null | wc -l || echo "L2 not available"
          
          echo "MB domains (if present):"
          ls -d /sys/fs/resctrl/info/MB/*/cpus 2>/dev/null | wc -l || echo "MB not available"
          
          echo ""
          echo "=== Domain details ==="
          for dir in /sys/fs/resctrl/info/*/; do
            if [ -d "$dir" ]; then
              resource=$(basename "$dir")
              echo "Resource: $resource"
              ls -la "$dir" 2>/dev/null || true
              echo ""
            fi
          done
      - name: Check intel_cqm
        run: |
          echo "*** Listing /sys/devices/intel_cqm"
          ls -la /sys/devices/intel_cqm || true
          echo "*** Traversing  /sys/devices/intel_cqm/events"
          find /sys/devices/intel_cqm/events || true
          echo "checking type"
          cat /sys/devices/intel_cqm/type || true
          echo "reading llc_occupancy"
          cat /sys/devices/intel_cqm/events/llc_occupancy || true
          cat /sys/devices/intel_cqm/events/llc_occupancy.scale || true
      - name: Power off
        run: |
          shutdown --poweroff now

  cleanup-runner:
    name: Stop EC2 runner
    needs: [setup-runner, do-job]
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Stop AWS Runner
        uses: ./.github/actions/aws-runner/cleanup
        with:
          runner-label: ${{ needs.setup-runner.outputs.runner-label }}
          ec2-instance-id: ${{ needs.setup-runner.outputs.ec2-instance-id }}
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ needs.setup-runner.outputs.region || secrets.AWS_REGION }}
