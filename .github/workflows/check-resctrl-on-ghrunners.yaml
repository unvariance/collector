name: Check resctrl and perf on GitHub runners

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/check-resctrl-on-ghrunners.yaml'
  push:
    branches: [ main, master ]
    paths:
      - '.github/workflows/check-resctrl-on-ghrunners.yaml'

jobs:
  probe:
    name: Probe resctrl and perf
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest, ubuntu-24.04-arm]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Collect system info
        shell: bash
        run: |
          set -euxo pipefail
          LOG=probe.log
          exec > >(tee -a "$LOG") 2>&1
          echo "== OS Release =="
          cat /etc/os-release || true
          echo "== Kernel =="
          uname -a
          echo "== CPU Info (lscpu) =="
          lscpu || true
          echo "== CPU Flags (from /proc/cpuinfo) =="
          grep -m1 -i '^flags' /proc/cpuinfo || true
          echo "== Kernel cmdline =="
          cat /proc/cmdline || true

          echo "== Kernel config: resctrl related (if available) =="
          if [ -r /proc/config.gz ]; then
            if command -v rg >/dev/null 2>&1; then zcat /proc/config.gz | rg -i 'RESCTRL|RDT' || true; else zcat /proc/config.gz | grep -Ei 'RESCTRL|RDT' || true; fi
          elif [ -r "/boot/config-$(uname -r)" ]; then
            if command -v rg >/dev/null 2>&1; then rg -i 'RESCTRL|RDT' "/boot/config-$(uname -r)" || true; else grep -Ei 'RESCTRL|RDT' "/boot/config-$(uname -r)" || true; fi
          else
            echo "kernel config not readable"
          fi

      - name: Probe resctrl mount
        shell: bash
        run: |
          set -euxo pipefail
          LOG=probe.log
          exec > >(tee -a "$LOG") 2>&1
          echo "== resctrl directory presence =="
          ls -ld /sys/fs/resctrl || true

          echo "== Attempting to create resctrl mountpoint (sudo) =="
          sudo mkdir -p /sys/fs/resctrl || true
          ls -ld /sys/fs/resctrl || true

          echo "== Attempting to mount resctrl (sudo) =="
          # If already mounted, this will fail; that's fine, we'll inspect mounts next.
          if ! mount | grep -q 'on /sys/fs/resctrl '; then
            sudo mount -t resctrl resctrl /sys/fs/resctrl || true
          fi

          echo "== Mounts filtered for resctrl =="
          mount | grep -i resctrl || true
          cat /proc/mounts | grep -i resctrl || true

          echo "== resctrl tree =="
          if [ -d /sys/fs/resctrl ]; then
            find /sys/fs/resctrl -maxdepth 2 -type f -o -type d | sort | xargs -r ls -ld || true
            echo "-- schemata (if present) --"
            [ -f /sys/fs/resctrl/schemata ] && cat /sys/fs/resctrl/schemata || true
            [ -f /sys/fs/resctrl/info/L3/cbm_mask ] && cat /sys/fs/resctrl/info/L3/cbm_mask || true
          fi

      - name: Probe perf capabilities
        shell: bash
        run: |
          set -euxo pipefail
          LOG=probe.log
          exec > >(tee -a "$LOG") 2>&1
          echo "== perf sysctls (before) =="
          sysctl kernel.perf_event_paranoid || true
          sysctl kernel.kptr_restrict || true

          echo "== attempting to set kernel.perf_event_paranoid=-1 (sudo) =="
          sudo sysctl -w kernel.perf_event_paranoid=-1 || true
          echo "== perf sysctls (after) =="
          sysctl kernel.perf_event_paranoid || true

          echo "== PMU event sources =="
          for d in /sys/bus/event_source/devices/*; do
            [ -d "$d" ] || continue
            name=$(basename "$d")
            type=$(cat "$d/type" 2>/dev/null || echo -n '?')
            echo "$name type=$type"
          done

          echo "== perf availability check =="
          if ! command -v perf >/dev/null 2>&1; then
            echo "perf not found; attempting install via common package managers"
            if command -v apt-get >/dev/null 2>&1; then
              sudo apt-get update -y || true
              sudo apt-get install -y linux-tools-common || true
              sudo apt-get install -y linux-tools-$(uname -r) || true
              sudo apt-get install -y linux-tools-generic || true
              sudo apt-get install -y linux-perf || true
              sudo apt-get install -y perf || true
            elif command -v dnf >/dev/null 2>&1; then
              sudo dnf install -y perf || true
            elif command -v yum >/dev/null 2>&1; then
              sudo yum install -y perf || true
            elif command -v zypper >/dev/null 2>&1; then
              sudo zypper --non-interactive install perf || true
            elif command -v apk >/dev/null 2>&1; then
              sudo apk add --no-cache linux-perf || true
              sudo apk add --no-cache perf || true
            else
              echo "No known package manager detected for perf installation"
            fi
          fi
          command -v perf || true
          perf --version || true

          echo "== perf stat sanity (cycles for 1s) =="
          perf stat -e cycles -a -- sleep 1 || true

      - name: Upload probe logs
        uses: actions/upload-artifact@v4
        with:
          name: resctrl-perf-probe-${{ matrix.runner }}
          path: probe.log
          if-no-files-found: warn
