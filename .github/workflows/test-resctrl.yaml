name: test-resctrl

on:
  workflow_dispatch:
    inputs:
      instance-type:
        description: 'EC2 instance type to use'
        required: false
        default: 'm7i.metal-24xl'
        type: string
      image-type:
        description: 'Runner AMI image type'
        required: false
        default: 'ubuntu-24.04'
        type: string
  push:
    branches:
      - main
    paths:
      - 'crates/resctrl/**'
      - '.github/workflows/test-resctrl.yaml'
      - 'Cargo.toml'

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  build-and-unit-test:
    name: Build + unit tests (GH hosted)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustc -V || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "source $HOME/.cargo/env" >> $HOME/.profile
          source $HOME/.cargo/env
          rustc -V
          cargo -V

      - name: Run unit tests (no hardware)
        run: |
          source $HOME/.cargo/env
          # RESCTRL_E2E not set, so smoke test is skipped
          cargo test -p resctrl --release -- --nocapture

      - name: Build test binaries (no-run)
        run: |
          source $HOME/.cargo/env
          # Build only the hardware smoke integration test binary
          cargo test -p resctrl --test smoke_test --release --no-run

      - name: Collect smoke test binary
        id: collect-bin
        run: |
          set -euxo pipefail
          BIN=$(find target/release/deps -maxdepth 1 -type f -executable -name 'smoke_test-*' | head -n 1)
          if [ -z "$BIN" ]; then
            echo "Smoke test binary not found" >&2
            exit 1
          fi
          file "$BIN" || true
          ldd "$BIN" || true
          cp "$BIN" resctrl-smoke
          chmod +x resctrl-smoke

      - name: Upload resctrl smoke binary
        uses: actions/upload-artifact@v4
        with:
          name: resctrl-smoke-bin
          path: resctrl-smoke
          if-no-files-found: error

  setup-runner:
    name: Start EC2 runner (resctrl-capable)
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.start-runner.outputs.runner-label }}
      ec2-instance-id: ${{ steps.start-runner.outputs.ec2-instance-id }}
      region: ${{ steps.start-runner.outputs.region }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start AWS Runner
        id: start-runner
        uses: ./.github/actions/aws-runner
        with:
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          iam-role-name: github-actions-runner
          instance-type: ${{ inputs.instance-type || 'm7i.metal-24xl' }}
          image-type: ${{ inputs.image-type || 'ubuntu-24.04' }}
          market-type: 'spot'

  resctrl-e2e:
    name: Run resctrl smoke test
    needs: [build-and-unit-test, setup-runner]
    runs-on: ${{ needs.setup-runner.outputs.runner-label }}
    timeout-minutes: 20
    env:
      HOME: /root
    steps:
      - name: Prepare HOME
        run: mkdir -p "$HOME"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure resctrl is mounted
        shell: bash
        run: |
          set -euxo pipefail
          if ! grep -q "/sys/fs/resctrl" /proc/mounts; then
            mount -t resctrl resctrl /sys/fs/resctrl
          fi

      - name: Download smoke binary
        uses: actions/download-artifact@v4
        with:
          name: resctrl-smoke-bin
          path: ./

      - name: Run resctrl smoke test (hardware)
        shell: bash
        run: |
          set -euxo pipefail
          BIN=./resctrl-smoke
          chmod +x "$BIN" || true
          echo "Executing $BIN"
          RESCTRL_E2E=1 "$BIN" --nocapture

  stop-runner:
    name: Stop EC2 runner
    needs: [setup-runner, resctrl-e2e]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Stop AWS Runner
        uses: ./.github/actions/aws-runner/cleanup
        with:
          runner-label: ${{ needs.setup-runner.outputs.runner-label }}
          ec2-instance-id: ${{ needs.setup-runner.outputs.ec2-instance-id }}
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ needs.setup-runner.outputs.region }}
